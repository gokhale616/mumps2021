cap_axes +
theme(axis.title = element_text(size = 8.5),
plot.margin = unit(rep(mar_val, 4), "cm"))
)
inc_legend <- prop_inc_plt %.>% get_legend(.)
prop_inc_plt <- prop_inc_plt + theme(legend.position = "none")
incidence_plt <- (
plot_grid(inc_rate_plt,
abs_inc_plt,
prop_inc_plt,
nrow = 3, labels = c("A", "B", "C"),
# rel_heights = c(1, 1),
align = "hv", axis = "b")
)
# final incidence plot
incidence_w_legend_plt <- (
plot_grid(incidence_plt, inc_legend,
rel_heights = c(1, 0.1), nrow = 2)
)
# maps go here
map_mumps <- function(mumps_geog, fill_var = Incidence,
breaks) {
# browser()
# generate a quosure type variables
enquo_fill_var <- enquo(fill_var)
#browser()
# depends on the preprocess_tycho_data.R
mumps_geog %.>%
ggplot(.,
aes(x = X, y = Y, group = Group)) +
geom_polygon(aes(fill = !!enquo_fill_var)) +
geom_path(size = 0.06, colour = "grey30")+
labs(x = "", y = "",
fill = expression(Cases~per~10^5)) +
annotate(geom = "text", x = 0.4e6, y = 0.65e6,
label = mumps_geog$Year %.>% unique(.),
parse = TRUE, size = 3)+
scale_fill_gradient(low = "#3a7bd5", high = "#FF4E50", na.value = NA,
breaks = breaks,
limits = c(0, 10))+
project_theme +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
legend.position = c(0.72, 0.1),
legend.title = element_text(size=9),
legend.text = element_text(size=8),
panel.grid = element_blank(),
plot.margin = unit(rep(mar_val, 4), "cm")) +
guides(fill = guide_colorbar(frame.colour = "black",
ticks.colour = "black",
title.position = "top",
direction = "horizontal",
barheight = 0.3)
)
}
set_map_data <- function(year_range) {
# browser()
len_v <- length(year_range)
mumps_demog_geog_annual %.>%
filter(., Year %in% year_range) %.>%
mutate(., Year = ifelse(len_v == 1,
year_range[1] %.>% as.character(.),
paste0(year_range[1], "-", year_range[len_v])
)
) %.>%
group_by(., Year, State) %.>%
mutate(., Incidence = mean(Incidence, na.rm = TRUE)) %.>%
ungroup(.)
}
mumps_demog_geog_annual_1985_91 <- (
set_map_data(year_range = c(1985:1989))
)
map_1985_91_plt <-  mumps_demog_geog_annual_1985_91 %.>%
map_mumps(., breaks = c(2, 4, 6, 8))
mumps_demog_geog_annual_2006_12 <- (
set_map_data(year_range = c(2006:2012))
)
map_2006_12_plt <-  mumps_demog_geog_annual_2006_12 %.>%
map_mumps(., breaks = c(2, 4, 6, 8))
map_grid_plt <- plot_grid(map_1985_91_plt, map_2006_12_plt,
labels = c("D", "E"))
# # contact matrix
contact_plt <- (
contact_matrix %.>%
plot_contact_matrix(contact_matrix = .) +
project_theme +
theme(legend.position = "bottom",
text = element_text(size = 20)) +
cap_axes +
guides(fill = guide_colorbar(frame.colour = "black",
ticks.colour = "black",
title.position = "top"))
)
# load all the treated covariates
source("../fit/treat_vacc_covar.R", chdir = TRUE)
setwd("~/Documents/GitHub/mumps2021/plotting")
# load all the treated covariates
source("../fit/treat_vacc_covar.R", chdir = TRUE)
anno_case_layer <- (
annotate(geom = "rect",
xmin = 1977, xmax = 2018,
ymin = 0, ymax = 1,
fill = "#b91d73", alpha = 0.2)
)
x_lims <- c(1950, 2020)
x_breaks <- seq(1950,2020, by = 10)
y_lims <- c(0, 1)
y_breaks <- seq(0, 1, by = 0.25)
interpolate_colour <- "#FF8C00"
default_colour <- "grey30"
# plot for the probability of reporting age
prob_report_plt <- (
mod_mumps_covariates_slow %.>%
filter(., year > 1949) %.>%
select(., year, eta_a) %.>%
ggplot(., aes(x = year, y = eta_a)) +
geom_line(size = 0.8, colour = default_colour) +
geom_point(pch = 21, fill = "white", size = 2, colour = default_colour) +
labs(x = "", y = "Age-stratified\n case records  ") + #P(Age reported) Case reports\n  age recorded
annotate(geom = "text", label = "Case Data",
angle = 90, x = 1974, y = 0.5) +
anno_case_layer +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = y_lims, breaks = y_breaks,
labels = scales::percent) +
project_theme +
cap_axes
)
# plot for normalized births
norm_births_plt <- (
mod_mumps_covariates_slow %.>%
filter(., year > 1949) %.>%
select(., year, Births) %.>%
mutate(.,
normalized_Births = Births/max(Births)) %.>%
ggplot(., aes(x = year, y = normalized_Births)) +
geom_line(size = 0.8, colour = default_colour) +
geom_point(pch = 21, fill = "white", size = 2, colour = default_colour) +
labs(x = "", y = "Normalized births    ") +
anno_case_layer +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = y_lims, breaks = y_breaks,
labels = scales::percent) +
project_theme +
cap_axes
)
# plot  neonatal cover
p1_cover_plt <- (
mod_mumps_covariates_slow %.>%
filter(., year > 1949) %.>%
select(., year, p1) %.>%
mutate(., vacc_cover  = ifelse(year > 1967 & year < 1985, "Interpolated", "Observed")) %.>%
ggplot(., aes(x = year, y = p1, colour = vacc_cover)) +
geom_line(aes(group = 1),  size = 0.8) +
geom_point(pch = 21, fill = "white", size = 2)  +
labs(x = "", y = "Neonatal dose", colour = "Vaccine\ncoverage") +
anno_case_layer +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = y_lims, breaks = y_breaks,
labels = scales::percent) +
scale_colour_manual(values = c(interpolate_colour, default_colour)) +
project_theme +
cap_axes +
theme(legend.position = "none")
)
# plot booster cover
p2_plt_data <- (
mod_mumps_covariates_slow %.>%
filter(., year > 1949) %.>%
mutate(., shape = "Slow") %.>%
bind_rows(.,
mod_mumps_covariates_sigmoidal %.>%
mutate(., shape = "Sigmoidal")) %.>%
bind_rows(.,
mod_mumps_covariates_rapid %.>%
mutate(., shape = "Rapid")) %.>%
bind_rows(.,
mod_mumps_covariates_constant %.>%
mutate(., shape = "Constant")) %.>%
select(., year, p2, shape) %.>%
mutate(.,
vacc_cover = ifelse(year > 1987 & year < 2000, "Interpolated", "Observed"))
)
p2_cover_plt <- (
p2_plt_data %.>%
ggplot(., aes(x = year, y = p2, colour = vacc_cover)) +
geom_segment(aes(xend = if_else(lead(shape) == shape, lead(year), NA_integer_),
yend = lead(p2)), size = 0.8) +
geom_point(shape = 21, size = 2, fill = "white") +
labs(x = "", y = "Booster dose", color = "Vaccine\ncoverage") +
anno_case_layer +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = y_lims, breaks = y_breaks,
labels = scales::percent) +
scale_colour_manual(values = c(interpolate_colour, default_colour)) +
project_theme +
cap_axes +
guides(colour = guide_legend(direction = "horizontal",
nrow = 2))
)
vacc_plt_legend <- get_legend(p2_cover_plt)
p2_cover_plt <- p2_cover_plt + theme(legend.position = "none")
ai_grid_plot <- (
plot_grid(prob_report_plt, norm_births_plt,
p1_cover_plt, p2_cover_plt, nrow = 2,
labels = c("A", "B", "C", "D"), align = "hv")
)
ai_grid_plot_w_leg <- (
plot_grid(ai_grid_plot, vacc_plt_legend, nrow = 2, rel_heights = c(1, 0.1))
)
# plot for age stratified covariates - population
pop_plt_data <- (
mumps_covariates %.>%
select(., year, starts_with("N_"))
)
colnames(pop_plt_data) <- c("year", age_names)
pop_plt <- (
pop_plt_data %.>%
filter(., year > 1949) %.>%
gather(., key = "age_cohort", value = "pop", -year, factor_key = TRUE) %.>%
ggplot(., aes(x = year, y = pop, fill = age_cohort)) +
geom_area() +
labs(x = "Year", y = "Population Size") +
annotate(geom = "rect",
xmin = 1977, xmax = 2018,
ymin = 0, ymax = 4e8,
fill = "#b91d73", alpha = 0.2) +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = c(0, 4e8), breaks = seq(0, 4e8, by = 1e8),
labels = scales::scientific) +
scale_fill_brewer(palette = "Greens", direction = -1) +
project_theme +
cap_axes +
theme(legend.position = "none")
)
mig_plt_data <- (
mumps_covariates %.>%
select(., year, starts_with("MU_"))
)
colnames(mig_plt_data) <- c("year", age_names)
mig_plt <- (
mig_plt_data %.>%
filter(., year > 1949) %.>%
gather(., key = "age_cohort", value = "mig", -year, factor_key = TRUE) %.>%
ggplot(., aes(x = year, y = mig, fill = age_cohort)) +
geom_area() +
labs(x = "Year", y = "Migration Rate", fill = "Age\ncohort") +
annotate(geom = "rect",
xmin = 1977, xmax = 2018,
ymin = -0.06, ymax = 0.06,
fill = "#b91d73", alpha = 0.2) +
scale_x_continuous(limits = x_lims, breaks = x_breaks) +
scale_y_continuous(limits = c(-0.06, 0.06),
breaks = c(-0.06, -0.03, 0, 0.03, 0.06),
labels = scales::scientific) +
scale_fill_brewer(palette = "Greens", direction = -1) +
project_theme +
cap_axes +
guides(fill = guide_legend(direction = "horizontal", nrow = 2))
)
as_plt_legend <- get_legend(mig_plt)
mig_plt <- mig_plt + theme(legend.position = "none")
as_grid_plot <- plot_grid(pop_plt, mig_plt, nrow = 1, labels = c("E", "F"))
as_grid_plot_w_leg <- plot_grid(as_grid_plot, as_plt_legend, nrow = 2, rel_heights = c(1, 0.2))
# cobine_all_plots
all_cov_plt <- plot_grid(ai_grid_plot_w_leg, as_grid_plot_w_leg, nrow = 2, rel_heights = c(1, 0.6))
all_cov_plt
contact_plt
# extract mean and median of the filtered distribution
imputed_vacc_coverage <- (
filtered_vacc %.>%
right_join(.,
by = "year",
mumps_weekly_case_reports %.>%
select(., -cases))  %.>%
select(., PeriodMidDate, p) %.>%
group_by(., PeriodMidDate)  %.>%
summarize(.,
median = median(p),
mean = mean(p)) %.>%
ungroup(.)  %.>%
gather(., "statistic", "trace", -PeriodMidDate)
)
# defining an annual time of vaccine coverage
imputed_vacc_coverage_fin <- (
imputed_vacc_coverage %.>%
mutate(.,
year = year(PeriodMidDate)) %.>%
group_by(., year, statistic) %.>%
mutate(.,
Weekly = trace,
Annual = mean(trace)) %.>%
ungroup(.) %.>%
select(., -c(trace, year)) %.>%
gather(.,
key = "imputation_res", value = "trace", -c(PeriodMidDate, statistic))
)
# plot on imputed vaccine values
imputed_vacc_coverage <- (
imputed_vacc_coverage_fin %.>%
ggplot(., aes(x = PeriodMidDate, y = trace)) +
geom_line(aes(colour = statistic), size = 0.8) +
labs(x = "Year",
y = "Vaccine coverage",
colour = "Filtered\nstatistic")  +
facet_grid(rows = vars(imputation_res)) +
project_theme +
scale_x_date(breaks = as.Date(c("1968-01-03", "1974-01-01", "1980-01-01", "1985-01-01")),
labels = date_format("%Y")) +
scale_y_continuous(limits = c(0, 0.86),
breaks = c(0, 0.29, 0.57, 0.86),
labels = scales::percent) +
scale_colour_manual(values = c("seagreen4", "firebrick3"))+
cap_axes +
theme(legend.position = c(0.25, 0.9),
text = element_text(size = 20)) +
guides(colour = guide_legend(direction = "horizontal",
nrow = 2))
)
imputed_vacc_coverage
# load all of the result objects in the global environment
mle_result_path <- "../result_data/mle/"
list.files(path = mle_result_path,
full.names = TRUE) %.>%
lapply(., load,  envir = .GlobalEnv)
# form a single list of all of the result objects to loop over later
result_list <- (
list(
mle_waning_slow, mle_waning_sigmoid, mle_waning_rapid, mle_waning_constant,
mle_leaky2_2_slow, mle_leaky2_2_sigmoid, mle_leaky2_2_rapid, mle_leaky2_2_constant,
mle_leaky2_3_slow, mle_leaky2_3_sigmoid, mle_leaky2_3_rapid, mle_leaky2_3_constant,
mle_leaky2_4_slow, mle_leaky2_4_sigmoid, mle_leaky2_4_rapid, mle_leaky2_4_constant
)
)
mk_result_df <- function(c = 1, res = result_list) {
# collect qualitative covariates
extra_params <- res[[c]]$Hypothesis %.>% str_split(., pattern = "_") %.>% unlist(.)
if(length(extra_params) == 3) {
hypo_covar <- extra_params[1]
p_intro    <- extra_params[2] %.>% as.numeric(.)
vacc       <- extra_params[3]
} else {
hypo_covar <- extra_params[1]
p_intro    <- NA
vacc       <- extra_params[2]
}
# calculate the reproductive numbers
params_for_R0 <- c(N = 100e6, nu = 1/80, p = 0, ad = age_class_duration)
params_for_Rp <- c(N = 100e6, nu = 1/80, p = 0.5, ad = age_class_duration)
R0 <- c(res[[c]]$DEobj$optim$bestmem %.>% sim_p_vals(.), params_for_R0) %.>%
calculate_R0_mq(.)$reprodutive_number
Rp <- c(res[[c]]$DEobj$optim$bestmem %.>% sim_p_vals(.), params_for_Rp) %.>%
calculate_R0_mq(.)$reprodutive_number
# collate results in a dataframe
res[[c]]$DEobj$optim$bestmem %.>%
as.list(.) %.>%
as_tibble(.) %>%
mutate(.,
R0 = R0,
Rp = Rp,
impact = 1-Rp/R0,
loglik = -res[[c]]$DEobj$optim$bestval,
npar = res[[c]]$DEobj$optim$bestmem %.>% length(.),
AIC = calculate_aic(loglik, npar),
hypothesis = hypo_covar,
p_intro    = p_intro,
vacc_covariate = vacc) %.>%
select(., -c(loglik, npar))
}
all_result_df <- (
map_dfr(1:length(result_list), mk_result_df) %.>%
mutate(.,
d_AIC = AIC - min(AIC)) %.>%
mutate(.,
best_fit_covar = ifelse(AIC == min(AIC), 1, 0)) %.>%
ungroup(.) %.>%
select(., -AIC)
)
# table of estimates - process model
table_hypo_compare <- (
all_result_df %.>%
select(., -c(best_fit_covar, starts_with("q_age"),
starts_with("rho_age"), starts_with("psi"),
p_intro)) %.>%
arrange(., d_AIC) %.>%
group_by(., hypothesis) %.>%
filter(., d_AIC == min(d_AIC)) %.>%
ungroup(.) %.>%
mutate_if(., is.numeric, function(x){round(x, digits = 3)}) %.>%
mutate(.,
vacc_covariate = str_to_title(vacc_covariate),
hypothesis = str_to_title(hypothesis)) %.>%
gather(.,
key = "Parameter", value = "Estimate",
-c(hypothesis)) %.>%
spread(., key = hypothesis, value = Estimate)
)
table_hypo_compare
sim_from_these <- (
all_result_df %.>%
filter(., best_fit_covar == TRUE) %.>%
select(.,
-c(hypothesis, vacc_covariate, d_AIC, best_fit_covar)) %.>%
mutate(.,
p_intro = 6,
t_intro = 3000,
epsilon2 = 0) %.>%
unlist(.) %.>%
sim_p_vals(.)
)
sim_from_these
# make this happen nicely
source("../fit/treat_vacc_covar.R", chdir = TRUE)
po_est_test <- make_pomp(covar = mod_mumps_covariates_sigmoidal)
obs_sim <- sim_from_these %.>%
sim_obs_model(po_est_test, params = ., times = time(po_est_test), nsim = 1e3) %.>%
mutate(.,
hypothesis = "Waning",
sample = ifelse(year<2013, "in-sample", "our-sample"))
time(po_est_test)
mumps_case_reports
View(mumps_case_reports)
setwd("~/Documents/GitHub/mumps2021/process_raw_data")
# load raw data
sheet_name <- excel_sheets("../raw_data/mumps_case_data.xlsx")
mumps_1977_1994 <- read_excel("../raw_data/mumps_case_data.xlsx", sheet = "Sheet1")
mumps_1995 <- read_excel("../raw_data/mumps_case_data.xlsx", sheet = "Sheet2")
mumps_1996_2018 <- read_excel("../raw_data/mumps_case_data.xlsx", sheet = "Sheet3")
mumps_1996_2018 %<>% na_if(1.1)
mumps_1996_2018
# plotting time series #######################################################################################
## DELETE this when cleaning
mumps_1977_1994 %>%
gather(key = "Age Classes", value = "Cases", -c(Year, Region)) -> mumps_1977_1994_l
mumps_1977_1994_l %>%
select(`Age Classes`) %>%
unique() %>% t() %>% as.vector() -> levels_1977_1994
mumps_1977_1994_l %>%
filter(`Age Classes` != "total") %>%
ggplot(aes(x = Year, y = sqrt(Cases))) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = c(seq(1977, 1995, by = 4))) +
labs(y = expression(sqrt(Cases))) +
facet_wrap(~factor(`Age Classes`, levels = levels_1977_1994)) +
theme(aspect.ratio = 0.5)
mumps_1996_2018 %>%
gather(key = "Age Classes", value = "Cases", -c(Year, region)) -> mumps_1996_2018_l
mumps_1996_2018_l %>%
select(`Age Classes`) %>%
unique() %>% t() %>% as.vector() -> levels_1996_2018
mumps_1996_2018_l %>%
filter(`Age Classes` != "total") %>%
ggplot(aes(x = Year, y = sqrt(Cases))) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = c(seq(1996, 2016, by = 4))) +
labs(y = expression(sqrt(Cases))) +
facet_wrap(~factor(`Age Classes`, levels = levels_1996_2018)) +
theme(aspect.ratio = 0.5)
mumps_1995 %>%
gather(key = "Age Classes", value = "Cases", -c(Year, region)) -> mumps_1995_l
mumps_1995_l %>%
select(`Age Classes`) %>%
unique() %>% t() %>% as.vector() -> levels_1995
# condense the raw data to 6 classes #########################################################################
mumps_1977_1994_proc <- (
mumps_1977_1994 %.>%
mutate(.,
`[0,5)`   = `[0,1)`  + `[1,5)`,
`[5,15)`  = `[5,10)` + `[10,15)`,
`[15,25)` = `[15,20)`  + `[20,25)`,
`[25,40)` = `[20,25)` + `[25,30)` + `[30,40)`,
`>40`     = `[40,50)` + `[50,60)`  + `>60`,
Total     = total) %.>%
select(.,
Year, total, `[0,5)`, `[5,15)`, `[15,25)`, `[25,40)`, `>40`, unknown)
)
mumps_1996_2018_proc <- (
mumps_1996_2018 %.>%
mutate(.,
`[0,5)`   = `[0,1)`  + `[1,5)`,
`>40`     = `[40,65)` + `>65`,
Total     = total) %.>%
select(.,
Year, total, `[0,5)`, `[5,15)`, `[15,25)`, `[25,40)`, `>40`, unknown)
)
mumps_1996_2018_proc
View(mumps_1996_2018_proc)
# combine both time series ###################################################################################
mumps_1977_2018_proc <- (
mumps_1977_1994_proc %.>%
bind_rows(.,
mumps_1996_2018_proc)
)
# define missing data point for further analysis
missing_years <- (
tibble(Year = c(1976, 1995),
total = NA, `[0,5)` = NA, `[5,15)` = NA, 3,
`[15,25)` = NA, 3, `[25,40)` = NA, 3, `>40` = NA, 3,
unknown = NA, 3
)
)
# define missing data point for further analysis
missing_years <- (
tibble(Year = c(1976, 1995),
total = NA, `[0,5)` = NA, `[5,15)` = NA,
`[15,25)` = NA, `[25,40)` = NA, `>40` = NA,
unknown = NA
)
)
missing_years
dev.off()
